Concurrent Editing Model
------------------------

You're in a team that builds an online concurrent editing tool, something like Google Docs. When the tool is ready, multiple users will be able to log in and work on the shared documents at the same time. 

You are responsible for the server-side model of this system. You will need  to build a model that would support at least the following features of the app:

* Live updates - when one user enters text, the other users see it, maybe with a little delay but without reloading the page.

* Concurrent editing - multiple users can make edits at the same time. Concurrent edits should always merge and never result in a conflict.


You're encouraged to think about other properties that such system must have.

The test task is: think about the architecture of this application and create a model in Java for it. The model should include: 
a) data structures to keep data in memory; 
b) interfaces for working with this data that would be used when implementing features listed above; 
c) implementation of these interfaces.

Assume that everything happens in memory, don't bother with databases or other storage.

The format is plain text (no formatting!) and the language is known to be English.

You can use:

* JDK 1.8
* Kotlin
* Web technology stack of your choice (Spring / Akka HTTP / Play / Ktor / vert.x)
* Apache Commons (any library)
* Guava
